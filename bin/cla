#!/bin/bash
# An extendable tool suite for data analysis from the command line.
options(){
    echo -e "\nThe following options may be specified."
    echo -e "\t-h\tprint usage information"
    echo -e "\t-i\ttoggle incremental results"
    echo -e "\t-t TDIR\tspecify TDIR as the cla tmp directory"
    echo -e "\t-m MODS\tspecify a comma seperated list of modules to use\n"
    exit 0
}

## environment variables and arguments
if [ -z $CLA_TDIR ];then CLA_TDIR="/tmp/cla"; fi
if [ -z $CLA_MODS ];then CLA_MODS=""; fi
if [ -z $CLA_INCR ];then CLA_INCR=0; fi
while getopts :hit:m: option;do
    case "$option" in
        h) echo "Process data from STDIN with multiple modules." && options ;;
        i) if [ $CLA_INCR -eq 0 ];then CLA_INCR=1; else CLA_INCR=0; fi ;;
        t) CLA_TDIR="$OPTARG" ;;
        m) CLA_MODS="$OPTARG" ;;
        *) echo "invalid argument!" && options ;;
    esac
done
if [ "$CLA_MODS" = "" ];then echo "no mods specified, exiting"; exit 1; fi

## setup temp directory, and build tee command string
mkdir -p $CLA_TDIR
IFS=","
tee_str="tee"
for m in $CLA_MODS;do
    touch $CLA_TDIR/$m
    tee_str="$tee_str >($m|line-buffer $CLA_TDIR/$m)"
done
tee_str="$tee_str >/dev/null"

## run
cat -|bash -c "$tee_str" &
backend_pid=$!

## incremental printing
if [ $CLA_INCR -eq 1 ];then
    ncur_str="ncurses-frontend"
    for m in $CLA_MODS;do ncur_str="$ncur_str $CLA_TDIR/$m"; done
    eval "$ncur_str" &
    frontend_pid=$!
    while ps -p $backend_pid 1>/dev/null;do sleep 0.1; done
    ps -ef |grep "$!"|awk '{print $2}'|xargs kill -INT
fi

## final printing
wait
for m in $CLA_MODS;do echo -e "$m\t$(cat $CLA_TDIR/$m)"; done

## cleanup
rm -rf $CLA_TDIR
